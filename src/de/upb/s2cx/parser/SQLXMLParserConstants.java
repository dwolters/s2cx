/* Generated By:JJTree&JavaCC: Do not edit this line. SQLXMLParserConstants.java */
package de.upb.s2cx.parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface SQLXMLParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int CHAR = 5;
  /** RegularExpression Id. */
  int NUMBER = 6;
  /** RegularExpression Id. */
  int LOWERCHAR = 7;
  /** RegularExpression Id. */
  int UPPERCHAR = 8;
  /** RegularExpression Id. */
  int DIGIT = 9;
  /** RegularExpression Id. */
  int AS = 10;
  /** RegularExpression Id. */
  int COMMA = 11;
  /** RegularExpression Id. */
  int SELECT = 12;
  /** RegularExpression Id. */
  int FROM = 13;
  /** RegularExpression Id. */
  int WHERE = 14;
  /** RegularExpression Id. */
  int ORDERBY = 15;
  /** RegularExpression Id. */
  int GROUPBY = 16;
  /** RegularExpression Id. */
  int ASC = 17;
  /** RegularExpression Id. */
  int DESC = 18;
  /** RegularExpression Id. */
  int NAME = 19;
  /** RegularExpression Id. */
  int DATE = 20;
  /** RegularExpression Id. */
  int XMLELEMENT = 21;
  /** RegularExpression Id. */
  int XMLATTRIBUTES = 22;
  /** RegularExpression Id. */
  int XMLFOREST = 23;
  /** RegularExpression Id. */
  int XMLCONCAT = 24;
  /** RegularExpression Id. */
  int XMLAGG = 25;
  /** RegularExpression Id. */
  int SUM = 26;
  /** RegularExpression Id. */
  int AVG = 27;
  /** RegularExpression Id. */
  int MIN = 28;
  /** RegularExpression Id. */
  int MAX = 29;
  /** RegularExpression Id. */
  int COUNT = 30;
  /** RegularExpression Id. */
  int EXISTS = 31;
  /** RegularExpression Id. */
  int STRING = 32;
  /** RegularExpression Id. */
  int IDENTIFIER = 33;
  /** RegularExpression Id. */
  int DOT = 34;
  /** RegularExpression Id. */
  int LEFT_PAR = 35;
  /** RegularExpression Id. */
  int RIGHT_PAR = 36;
  /** RegularExpression Id. */
  int EQUAL = 37;
  /** RegularExpression Id. */
  int NOTEQUAL = 38;
  /** RegularExpression Id. */
  int GREATER = 39;
  /** RegularExpression Id. */
  int LESSER = 40;
  /** RegularExpression Id. */
  int LESSEQUAL = 41;
  /** RegularExpression Id. */
  int GREATEREQUAL = 42;
  /** RegularExpression Id. */
  int LIKE = 43;
  /** RegularExpression Id. */
  int AND = 44;
  /** RegularExpression Id. */
  int OR = 45;
  /** RegularExpression Id. */
  int NOT = 46;
  /** RegularExpression Id. */
  int IN = 47;
  /** RegularExpression Id. */
  int ASTERISK = 48;
  /** RegularExpression Id. */
  int SOLIDUS = 49;
  /** RegularExpression Id. */
  int PLUS = 50;
  /** RegularExpression Id. */
  int MINUS = 51;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "<CHAR>",
    "<NUMBER>",
    "<LOWERCHAR>",
    "<UPPERCHAR>",
    "<DIGIT>",
    "\"AS\"",
    "\",\"",
    "\"SELECT\"",
    "\"FROM\"",
    "\"WHERE\"",
    "\"ORDER BY\"",
    "\"GROUP BY\"",
    "\"ASC\"",
    "\"DESC\"",
    "\"NAME\"",
    "\"DATE\"",
    "\"XMLELEMENT\"",
    "\"XMLATTRIBUTES\"",
    "\"XMLFOREST\"",
    "\"XMLCONCAT\"",
    "\"XMLAGG\"",
    "\"SUM\"",
    "\"AVG\"",
    "\"MIN\"",
    "\"MAX\"",
    "\"COUNT\"",
    "\"EXISTS\"",
    "<STRING>",
    "<IDENTIFIER>",
    "\".\"",
    "\"(\"",
    "\")\"",
    "\"=\"",
    "\"<>\"",
    "\">\"",
    "\"<\"",
    "\"<=\"",
    "\">=\"",
    "\"LIKE\"",
    "\"AND\"",
    "\"OR\"",
    "\"NOT\"",
    "\"IN\"",
    "\"*\"",
    "\"/\"",
    "\"+\"",
    "\"-\"",
  };

}
